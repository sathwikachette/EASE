{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpringMl\\\\Soothe\\\\src\\\\HomepageSubparts\\\\Assessment\\\\src\\\\App-assessment.js\";\nimport React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from \"./svg/logo5.png\";\nimport './App-assessment.css';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar score_final = 0;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question => this.shuffleArray(question.answers));\n    console.log(shuffledAnswerOptions);\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n  shuffleArray(array) {\n    return array;\n  }\n  handleAnswerSelected(event) {\n    var temp = parseInt(event.currentTarget.value);\n    score_final = score_final + temp;\n    console.log(score_final);\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({\n        result: result[0]\n      });\n    } else {\n      this.setState({\n        result: 'Undetermined'\n      });\n    }\n  }\n  renderQuiz() {\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      answer: this.state.answer,\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: quizQuestions.length,\n      onAnswerSelected: this.handleAnswerSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n  renderResult() {\n    return /*#__PURE__*/_jsxDEV(Result, {\n      quizResult: score_final\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header-assessment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo-assessment\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text\",\n          children: \"Anxiety Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), this.state.result ? this.renderResult() : this.renderQuiz()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","quizQuestions","Quiz","Result","logo","jsxDEV","_jsxDEV","score_final","App","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","handleAnswerSelected","bind","componentDidMount","shuffledAnswerOptions","map","shuffleArray","answers","console","log","setState","array","event","temp","parseInt","currentTarget","value","length","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","key","maxAnswerCount","Math","max","apply","filter","renderQuiz","questionTotal","onAnswerSelected","fileName","_jsxFileName","lineNumber","columnNumber","renderResult","quizResult","render","className","children","src","alt"],"sources":["C:/Users/SpringMl/Soothe/src/HomepageSubparts/Assessment/src/App-assessment.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport quizQuestions from './api/quizQuestions';\r\nimport Quiz from './components/Quiz';\r\nimport Result from './components/Result';\r\nimport logo from \"./svg/logo5.png\";\r\nimport './App-assessment.css';\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nvar score_final = 0;\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: ''\r\n      ,answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      result: ''\r\n    };\r\n    \r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shuffledAnswerOptions = quizQuestions.map(question =>\r\n      \r\n      this.shuffleArray(question.answers)\r\n       \r\n    );\r\n    console.log(shuffledAnswerOptions);\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: shuffledAnswerOptions[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    return array;\r\n   }\r\n\r\n  handleAnswerSelected(event) {\r\n    var temp = parseInt(event.currentTarget.value);\r\n    score_final = score_final + temp;\r\n    console.log(score_final);\r\n\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question\r\n      ,answerOptions: quizQuestions[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const answersCountKeys = Object.keys(answersCount);\r\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\r\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\r\n\r\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undetermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      \r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {   \r\n    return <Result quizResult={score_final} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"App-header-assessment\">\r\n          <img src={logo} className=\"App-logo-assessment\" alt=\"logo\" />\r\n          <h2 className=\"text\">Anxiety Test</h2>\r\n        </div>\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}